// *
// * Erdmann & Freunde
// * OPTIMIST Contao Theme
// * erdmann-freunde.de/produkte/contao-themes/optimist/
// *

//
// TRUMPS/HELPER
// --------------------------------------------------

// sass-lint:disable no-universal-selectors, force-element-nesting

.text--inverted,
.text--inverted * {
  color: var(--color-text-inverted);
}

.border-top {
  border-top: var(--base-border);
}

.border-bottom {
  border-bottom: var(--base-border);
}

.block--center {
  margin-left: auto;
  margin-right: auto;
}

// spacing classes for articles and elements beginning from .m-t-0 up to .m-t-5
@for $i from 0 through 5 {
  .m-t-#{$i},
  .mod_article.m-t-#{$i} {
    margin-top: calc(#{$i} * var(--base-spacing-unit));
  }

  .m-b-#{$i},
  .mod_article.m-b-#{$i} {
    margin-bottom: calc(#{$i} * var(--base-spacing-unit));
  }

  .p-t-#{$i} {
    padding-top: calc(#{$i} * var(--base-spacing-unit));
  }

  .p-b-#{$i} {
    padding-bottom: calc(#{$i} * var(--base-spacing-unit));
  }

  .mod_article.p-t-#{$i} {
    --article-spacing-top: calc(#{$i} * var(--base-spacing-unit));

    padding-top: 0;
  }

  .mod_article.p-b-#{$i} {
    --article-spacing-bottom: calc(#{$i} * var(--base-spacing-unit));

    padding-bottom: 0;
  }
}


// article widths container .article -[viewport]-[cols]
//
// [1] length($breakpoints) - go through length of available viewports (xs, sm, md, lg, xl == 5)
// [2] $current - actual viewport (e.g. "xs")
// [3] $i - counter, returns the actual grid-column
// [4] $grid-columns - go through available columns (e.g. 1 --> 12)
@for $size from 1 through length($breakpoints) { // [1]
  $x:   nth($breakpoints, $size); // [2]
  $current:   nth($x, 1); // [2]

  // grid creation
  @for $i from 1 through $grid-columns { // [3][4]
    .article-#{$current}-#{$i} {
      > .inside {
        display: grid;
        grid-template-columns: repeat($grid-columns, 1fr);
        -webkit-column-gap: var(--grid-gutter);
           -moz-column-gap: var(--grid-gutter);
                column-gap: var(--grid-gutter);

        > * { // [2][3]
          @extend %column-floating;

          @supports not (display: grid) {
            padding-left: 0;
            padding-right: 0;
          }
        }
      }
    }
  }

  // width creation for every article- class
  @include media-query(screen-#{$current}) { // [2]

    @for $i from 1 through $grid-columns { // [3][4]
      .article-#{$current}-#{$i} .inside > * { // [2][3]
        grid-column-end: span $i;

        @supports not (display: grid) {
          width: percentage($i/12);
        }
      }

      .article-start-#{$current}-#{$i} .inside > * {
        grid-column-start: $i;
      }
    }
  }
}
